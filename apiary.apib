FORMAT: 1A
HOST: http://192.168.1.148:3001


# olajuwon99


# Group User

## Existing User Operations [/users/{user_id}]
+ Parameters
    + user_id (number) - ID of the User in the form of an integer

### Get User Details [GET]
Get user details for the given user_id.
+ Request
    + Headers
        
            Authorization: Bearer {token}
            Accept: application/json
            
+ Response 200 (application/json)

        {
            "_id": "uuid",
            "username": "olajuwon99@houston.com",
            "email": "olajuwon99@houston.com",
            "created": "2018-05-23T04:51:40.862Z",
            "lastUpdated": "2018-05-23T04:51:40.862Z",
            "_lmt": "2018-05-23T04:51:40.862Z",
            "_ect": "2018-05-23T04:51:40.862Z",
            "_tenantRef": "HOU",
            "tags": ["The Dream", "Hakeem the Dream Olajuwon"],
            "role": "Advisor"
        }
        
### Delete User [DELETE]
Delete user by id.
+ Request
    + Headers
        
            Authorization: Bearer {token}

+ Response 204

### Update User [PUT]
Update a single user.
+ Request (application/json)
        
        {
            "username": "olajuwon99@houston.com",
            "email": "olajuwon99@houston.com",
            "tags": ["The Dream", "Hakeem the Dream Olajuwon", "The Dream Shake"],
            "role": "Advisor"
        }

    + Headers
        
            Authorization: Bearer {token}
            Accept: application/json
        
+ Response 200 (application/json)

        {
            "_id": "uuid",
            "username": "olajuwon99@houston.com",
            "email": "olajuwon99@houston.com",
            "created": "2018-05-23T04:51:40.862Z",
            "lastUpdated": "2018-05-23T04:51:40.862Z",
            "_lmt": "2018-05-23T04:51:40.862Z",
            "_ect": "2018-05-23T04:51:40.862Z",
            "_tenantRef": "HOU",
            "tags": ["The Dream", "Hakeem the Dream Olajuwon", "The Dream Shake"],
            "role": "Advisor"
        }
        
### Update property [PATCH]
Update subset of properties of user
+ Request (application/json)
        
        {
            "tags": ["The Dream", "Hakeem the Dream Olajuwon", "The Dream Shake"]
        }

    + Headers
        
            Authorization: Bearer {token}
            Accept: application/json
        
+ Response 200 (application/json)

        {
            "_id": "uuid",
            "username": "olajuwon99@houston.com",
            "email": "olajuwon99@houston.com",
            "created": "2018-05-23T04:51:40.862Z",
            "lastUpdated": "2018-05-23T04:51:40.862Z",
            "_lmt": "2018-05-23T04:51:40.862Z",
            "_ect": "2018-05-23T04:51:40.862Z",
            "_tenantRef": "HOU",
            "tags": ["The Dream", "Hakeem the Dream Olajuwon", , "The Dream Shake"],
            "role": "Advisor"
        }
        
## Users Operations [/users]

### Create a New User [POST]

You may create your own user using this action. It takes a JSON
object containing user details and under which security group it's in.

+ Request (application/json)

        {
            "first_name": "Hakeem",
            "last_name": "Olajuwon",
            "email": "olajuwon99@houston.com",
            "username": "olajuwon99@houston.com",
            "password": "123456",
            "language": "en",
            "groups": ["houston", "toronto"],
            "tags": ["The Dream", "Hakeem the Dream Olajuwon"],
            "role": "Advisor"
        }
        
    + Headers
        
            Authorization: Bearer {token}
            Accept: application/json

+ Response 200 (application/json)


    + Body

            {
                "_id": "uuid",
                "username": "olajuwon99@houston.com",
                "email": "olajuwon99@houston.com",
                "created": "2018-05-23T04:51:40.862Z",
                "lastUpdated": "2018-05-23T04:51:40.862Z",
                "_lmt": "2018-05-23T04:51:40.862Z",
                "_ect": "2018-05-23T04:51:40.862Z",
                "_tenantRef": "HOU",
                "tags": ["The Dream", "Hakeem the Dream Olajuwon"],
                "client_role": "Advisor"

            }

### List All Users [GET]
List all users.
+ Request
    + Headers
        
            Authorization: Bearer {token}
            Accept: application/json

+ Response 200 (application/json)

        [
            {
                "_id": "string",
                "firstName": "Jon",
                "lastName": "Doe"
            },
            {
                "_id": "string",
                "firstName": "Jane",
                "lastName": "Doe"
            }
        ]